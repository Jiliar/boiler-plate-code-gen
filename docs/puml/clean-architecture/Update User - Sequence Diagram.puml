@startuml UpdateUser
!theme plain
title Update User - Clean Architecture Flow

actor Client
participant "UserController\n(Input Adapter)" as Controller
participant "UpdateUserService\n(Application Layer)" as Service
participant "UserMapper\n(Application Layer)" as Mapper
participant "UserRepositoryAdapter\n(Output Adapter)" as RepoAdapter
participant "JpaUserRepository\n(Infrastructure)" as JpaRepo
database "H2 Database" as DB

Client -> Controller: PUT /users/{userId}\n{email, firstName, lastName}
activate Controller

Controller -> Service: execute(userId, UpdateUserRequestContent)
activate Service

Service -> RepoAdapter: findById(userId)
activate RepoAdapter
RepoAdapter -> JpaRepo: findById(userId)
activate JpaRepo
JpaRepo -> DB: SELECT * FROM users WHERE id = ?
DB --> JpaRepo: Optional<UserDbo>
JpaRepo --> RepoAdapter: Optional<UserDbo>
deactivate JpaRepo

RepoAdapter -> Mapper: toDomain(UserDbo)
activate Mapper
Mapper --> RepoAdapter: User (existing)
deactivate Mapper
RepoAdapter --> Service: Optional<User>
deactivate RepoAdapter

Service -> Mapper: fromUpdateRequest(request)
activate Mapper
note right: Maps only updatable fields\nIgnores username, userId, status, createdAt
Mapper --> Service: User (partial)
deactivate Mapper

note over Service: Preserve immutable fields:\n- setUserId(userId)\n- setUsername(existingUser.username)\n- setCreatedAt(existingUser.createdAt)\n- setStatus(existingUser.status)\n- setUpdatedAt(now())

Service -> RepoAdapter: save(User)
activate RepoAdapter

RepoAdapter -> Mapper: toDbo(User)
activate Mapper
Mapper --> RepoAdapter: UserDbo
deactivate Mapper

RepoAdapter -> JpaRepo: save(UserDbo)
activate JpaRepo
JpaRepo -> DB: UPDATE users SET email=?, firstName=?, lastName=?, updatedAt=? WHERE id=?
DB --> JpaRepo: UserDbo (updated)
JpaRepo --> RepoAdapter: UserDbo
deactivate JpaRepo

RepoAdapter -> Mapper: toDomain(UserDbo)
activate Mapper
Mapper --> RepoAdapter: User
deactivate Mapper
RepoAdapter --> Service: User (saved)
deactivate RepoAdapter

Service -> Mapper: toUpdateResponse(User)
activate Mapper
Mapper --> Service: UpdateUserResponseContent
deactivate Mapper

Service --> Controller: UpdateUserResponseContent
deactivate Service

Controller --> Client: HTTP 200\n{updated user data}
deactivate Controller

@enduml
