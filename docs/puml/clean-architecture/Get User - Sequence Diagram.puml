@startuml GetUser
!theme plain
title Get User - Clean Architecture Flow

actor Client
participant "UserController\n(Input Adapter)" as Controller
participant "GetUserService\n(Application Layer)" as Service
participant "UserMapper\n(Application Layer)" as Mapper
participant "UserRepositoryAdapter\n(Output Adapter)" as RepoAdapter
participant "JpaUserRepository\n(Infrastructure)" as JpaRepo
database "H2 Database" as DB

Client -> Controller: GET /users/{userId}
activate Controller

Controller -> Service: execute(userId)
activate Service

Service -> RepoAdapter: findById(userId)
activate RepoAdapter

RepoAdapter -> JpaRepo: findById(userId)
activate JpaRepo
JpaRepo -> DB: SELECT * FROM users WHERE id = ?
DB --> JpaRepo: Optional<UserDbo>
JpaRepo --> RepoAdapter: Optional<UserDbo>
deactivate JpaRepo

alt User Found
    RepoAdapter -> Mapper: toDomain(UserDbo)
    activate Mapper
    Mapper --> RepoAdapter: User
    deactivate Mapper
    
    RepoAdapter --> Service: Optional<User>
    deactivate RepoAdapter
    
    Service -> Mapper: toGetResponse(User)
    activate Mapper
    Mapper --> Service: GetUserResponseContent
    deactivate Mapper
    
    Service --> Controller: GetUserResponseContent
    deactivate Service
    
    Controller --> Client: HTTP 200\n{user data}
    deactivate Controller

else User Not Found
    RepoAdapter --> Service: Optional.empty()
    deactivate RepoAdapter
    
    Service --> Controller: NotFoundException
    deactivate Service
    
    Controller --> Client: HTTP 404\n{error message}
    deactivate Controller
end

@enduml
